#                   
# This source file is part of the Apodini Template open source project
# 
# SPDX-FileCopyrightText: 2021 Paul Schmiedmayer and the project authors (see CONTRIBUTORS.md) <paul.schmiedmayer@tum.de>
# 
# SPDX-License-Identifier: MIT
# 

name: Build Docker Image

on:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  docker:
    name: Docker Build and Push Image ${{ matrix.architecture }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        architecture: [arm64, amd64]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Get latest tag
        id: latesttag
        uses: WyriHaximus/github-action-get-previous-tag@v1
        with:
          fallback: latest
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: linux/${{ matrix.architecture }}
      - name: Set up docker buildx
        uses: docker/setup-buildx-action@v1
        with:
          install: true
      - name: Log in to the container registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Determine Base Image
        uses: haya14busa/action-cond@v1
        id: baseimage
        with:
          cond: ${{ matrix.architecture == 'arm64' }}
          if_true: 'swiftarm/swift:5.5.1-ubuntu-focal'
          if_false: 'swift:focal'
      - name: Build and push docker image
        id: buildandpush
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          build-args: |
            baseimage=${{ steps.baseimage.outputs.value }}
          push: true
          platforms: linux/${{ matrix.architecture }}
          tags: ghcr.io/apodini/template:latest-${{ matrix.architecture }},ghcr.io/apodini/template:${{ steps.latesttag.outputs.tag }}-${{ matrix.architecture }}
      - name: Image digest
        run: echo ${{ steps.buildandpush.outputs.digest }}
  dockermanifest:
    needs: [docker]
    name: Create Multi-CPU Architecture Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Get latest tag
        id: latesttag
        uses: WyriHaximus/github-action-get-previous-tag@v1
        with:
          fallback: latest
      - name: Log in to the container registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Create and Push Multi Architecture Image
        run: |
            docker manifest create ghcr.io/apodini/template:latest \
              --amend ghcr.io/apodini/template:latest-amd64 \
              --amend ghcr.io/apodini/template:latest-arm64
            docker manifest create ghcr.io/apodini/template:${{ steps.latesttag.outputs.tag }} \
              --amend ghcr.io/apodini/template:${{ steps.latesttag.outputs.tag }}-amd64 \
              --amend ghcr.io/apodini/template:${{ steps.latesttag.outputs.tag }}-arm64
            docker manifest push ghcr.io/apodini/template:latest
            docker manifest push ghcr.io/apodini/template:${{ steps.latesttag.outputs.tag }}
